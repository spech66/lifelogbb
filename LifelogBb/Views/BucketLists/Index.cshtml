@using LifelogBb.Utilities;
@model PaginatedListViewModel<LifelogBb.Models.Entities.BucketList>

@{
    ViewData["Title"] = "Bucket list";
    ViewData["PrimaryAction"] = "create";
    ViewData["SecondaryAction"] = "vision";
}

<div class="container-xl">
    <div class="row row-cards mb-3">
        <div class="col">
            <div class="card">
                <div class="card-body">
                    Sort by
                    <a asp-action="Index" asp-route-sortOrder="@RazorPageExtensions.GetSortRoute(ViewData, "CreatedAt")" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="table-sort @RazorPageExtensions.GetSortOrder(ViewData, "CreatedAt")" style="display: inline">Date</a>,
                    <a asp-action="Index" asp-route-sortOrder="@RazorPageExtensions.GetSortRoute(ViewData, "Title")" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="table-sort @RazorPageExtensions.GetSortOrder(ViewData, "Title")" style="display: inline">Title</a>,
                    <a asp-action="Index" asp-route-sortOrder="@RazorPageExtensions.GetSortRoute(ViewData, "Status")" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="table-sort @RazorPageExtensions.GetSortOrder(ViewData, "Status")" style="display: inline">Status</a>,
                    <a asp-action="Index" asp-route-sortOrder="@RazorPageExtensions.GetSortRoute(ViewData, "Category")" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="table-sort @RazorPageExtensions.GetSortOrder(ViewData, "Category")" style="display: inline">Category</a>.
                </div>
            </div>
        </div>
    </div>
    <div class="row row-cards">
        @foreach (var item in Model.List)
        {
            <div class="col-sm-6 col-lg-4">
                <div class="card card-sm h-100">
                    @if (item.ImageName != null)
                    {
                        <a asp-action="Details" asp-route-id="@item.Id" class="d-block"><img src="@Url.Action("GetImage", "BucketLists", new { id = item.Id })" class="card-img-top" alt="@Html.DisplayFor(modelItem => item.Title)" /></a>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <div class="d-flex align-items-center">
                            <div>
                                @if (item.Status == LifelogBb.Models.Entities.BucketListStatus.Reached)
                                {
                                    <span class="badge text-bg-success">@Html.DisplayFor(modelItem => item.Status)</span>
                                }
                                else if (item.Status == LifelogBb.Models.Entities.BucketListStatus.InProgress)
                                {
                                    <span class="badge text-bg-warning">@Html.DisplayFor(modelItem => item.Status)</span>
                                }
                                else
                                {
                                    <span class="badge text-bg-azure">@Html.DisplayFor(modelItem => item.Status)</span>
                                }
                            </div>
                            <div class="ms-auto">
                                @Html.DisplayFor(modelItem => item.Category, "Category")
                                @Html.DisplayFor(modelItem => item.Tags, "Tags")
                            </div>
                        </div>
                        <p class="card-text">
                            @Html.DisplayFor(modelItem => item.Description)
                        </p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-list-alt icon"></i>Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row row-cards mt-3">
        <div class="col">
            <div class="card">
                <div class="card-body d-flex align-items-center">
                    @await Component.InvokeAsync("Pagination", Model.List)
                </div>
            </div>
        </div>
    </div>
</div>
