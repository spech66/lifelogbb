@model string?

@{
    ViewData["Title"] = "Strength Training";
    ViewData["Pretitle"] = "Graph";
    @if (!string.IsNullOrEmpty(@Model))
    {
        ViewData["Pretitle"] = $"{Model} - Graph";
    }
}

<div class="container-xl">
    <div class="row row-deck row-cards">
        <div class="col-12">
            <div class="card">
                <div class="card-header border-0">
                    <h3 class="card-title">Total</h3>
                </div>
                <div class="card-body">
                    <div id="strengthtrainingTotal"></div>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-header border-0">
                    <h3 class="card-title">Weight</h3>
                </div>
                <div class="card-body">
                    <div id="strengthtrainingWeight"></div>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-header border-0">
                    <h3 class="card-title">Reps</h3>
                </div>
                <div class="card-body">
                    <div id="strengthtrainingReps"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    <script src="~/lib/tabler/core/dist/libs/apexcharts/dist/apexcharts.min.js"></script>
    <script type="text/javascript">
        function Strengthtraining(data) {
            this.date = data.createdAt;
            this.exercise = data.exercise;
            this.reps = data.reps;
            this.weight = parseFloat(data.weight).toFixed(2);
            this.notes = data.notes;
            this.rating = data.rating;
        }

        function generateChart(selDiv, chartTitle, chartData) {
            var options = {
                chart: {
                    type: 'bar'
                },
                plotOptions: {
                },
                series: [{
                    name: chartTitle,
                    data: chartData
                }],
                xaxis: {
                    type: "datetime"
                }
            };

            var chart = new ApexCharts(document.querySelector(`#${selDiv}`), options);
            chart.render();
        }

        $.getJSON("@Url.Action("GraphGet")", { exercise: "@Model" }, function (data) {
            data = data.sort((a, b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0)); // Ascending!
            var mappedStrengthtraining = $.map(data, function (item) { return new Strengthtraining(item) });

            const resultTotal = mappedStrengthtraining.map(sel => {
                return {
                    x: sel.date,
                    y: sel.reps * sel.weight
                }
            });

            const resultSingle = mappedStrengthtraining.map(sel => {
                return {
                    x: sel.date,
                    y: sel.weight
                }
            });

            const resultReps = mappedStrengthtraining.map(sel => {
                return {
                    x: sel.date,
                    y: sel.reps
                }
            });

            generateChart("strengthtrainingTotal", "Total by set", resultTotal);
            generateChart("strengthtrainingWeight", "Weight by set", resultSingle);
            generateChart("strengthtrainingReps", "Reps by set", resultReps);
        });
    </script>
}
