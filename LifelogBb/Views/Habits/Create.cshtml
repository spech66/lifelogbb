@model LifelogBb.Models.Entities.Habit

@{
    ViewData["Title"] = "Habit";
    ViewData["Pretitle"] = "Create";
}

<div class="container-xl">
    <div class="row row-cards">
        <div class="col-12">
            <form asp-action="Create" class="card">
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="control-label mb-1"></label>
                        <input asp-for="Name" class="form-control form-control-lg" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="control-label mb-1"></label>
                        <input asp-for="Description" class="form-control form-control-lg" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="StartDate" class="control-label mb-1"></label>
                        <input asp-for="StartDate" class="form-control form-control-lg" />
                        <span asp-validation-for="StartDate" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="EndDate" class="control-label mb-1"></label>
                        <input asp-for="EndDate" class="form-control form-control-lg" />
                        <span asp-validation-for="EndDate" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        @Html.EditorFor(model => model.RecurrenceRules, "RecurrenceRules")
                        <span asp-validation-for="RecurrenceRules" class="text-danger"></span>
                    </div>
                    <div class="mb-3 mt-3">
                        <label class="form-group form-check form-switch">
                            <input class="form-check-input" asp-for="IsCompleted" type="checkbox">
                            <span class="form-check-label">@Html.DisplayNameFor(model => model.IsCompleted)</span>
                        </label>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Category" class="control-label mb-1"></label>
                        <input asp-for="Category" class="form-control form-control-lg" data-whitelist="@ViewData["CategoryList"]" />
                        <span asp-validation-for="Category" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Tags" class="control-label mb-1"></label>
                        <input asp-for="Tags" class="form-control form-control-lg" data-whitelist="@ViewData["TagsList"]" />
                        <span asp-validation-for="Tags" class="text-danger"></span>
                    </div>
                </div>
                <div class="card-footer text-end">
                    <div class="d-flex">
                        <a class="btn btn-link" asp-action="Index">Back</a>
                        <button type="submit" value="Create" class="btn btn-primary ms-auto"><i class="fas fa-plus-square icon"></i>Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/lib/tagify/tagify.min.css" />
}

@section Scripts {
    <script src="~/lib/rrule/dist/es5/rrule.min.js"></script>
    <script src="~/js/rruleeditor.js"></script>

    <script src="~/lib/tagify/tagify.min.js"></script>
    <script>
        new Tagify(document.querySelector('#Category'), {
            originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(','),
            mode: "select",
            dropdown: {
                position: "input",
                enabled: 0
            }
        });
        new Tagify(document.querySelector('#Tags'), {
            originalInputValueFormat: valuesArr => valuesArr.map(item => item.value).join(','),
            dropdown: {
                position: "input",
                enabled: 0
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
